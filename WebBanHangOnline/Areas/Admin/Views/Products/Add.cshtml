@model WebBanHangOnline.Models.EF.Product
@{ ViewBag.Title = "Thêm mới sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml"; }

<!-- Content wrapper -->
<div class="content-wrapper">
    <!-- Content -->

    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light"><a href="/admin">Trang chủ</a> /</span> @ViewBag.Title</h4>

        @using (Html.BeginForm("Add", "Products", FormMethod.Post, new { id = "product-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="row">
                <!-- Cột trái -->
                <div class="col-md-6">
                    <div class="card mb-4">
                        <h5 class="card-header">@ViewBag.Title</h5>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label">Tên sản phẩm</label>
                                @Html.TextBoxFor(x => x.Title, new { @class = "form-control", placeholder = "Tên sản phẩm", required = "required", @data_parsley_required_message = "Không được để trống" })
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Mã sản phẩm</label>
                                @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control", placeholder = "Mã sản phẩm", required = "required", @data_parsley_required_message = "Không được để trống" })
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Danh mục sản phẩm</label>
                                @Html.DropDownListFor(x => x.ProductCategoryId, ViewBag.ProductCategory as SelectList, "- Chọn danh mục sản phẩm -", new { @class = "form-select", required = "required", @data_parsley_trigger = "change" })
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Màu sắc sản phẩm</label>
                                <div class="d-flex flex-wrap">
                                    @foreach (var color in ViewBag.Colors as List<WebBanHangOnline.Models.EF.Color>)
                                    {
                                        <div class="form-check me-3 mb-2" style="min-width: 120px;">
                                            <input class="form-check-input" type="checkbox" name="SelectedColors" value="@color.Id" id="color_@color.Id" />
                                            <label class="form-check-label" for="color_@color.Id">
                                                <span style="display:inline-block;width:15px;height:15px;background-color:@color.HexColor;border:1px solid #ccc;margin-right:5px;"></span>
                                                @color.Name
                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Giới thiệu ngắn</label>
                                @Html.TextAreaFor(x => x.Description, new { @class = "form-control", rows = 3, required = "required", @data_parsley_required_message = "Không được để trống" })
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Chi tiết sản phẩm</label>
                                @Html.TextAreaFor(x => x.Detail, new { @class = "form-control", id = "txtDetail", required = "required", @data_parsley_required_message = "Không được để trống" })
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Cột phải -->
                <div class="col-md-6">
                    <div class="card mb-4">
                        <h5 class="card-header">@ViewBag.Title</h5>
                        <div class="card-body">
                            <!-- Nút tải ảnh -->
                            <div class="demo-inline-spacing mb-3">
                                <input type="button" class="btn rounded-pill btn-outline-success" onclick="BrowseServer();" value="Tải ảnh" />
                            </div>
                            <input type="hidden" id="tCurrentId" value="0" />
                            <!-- Bảng ảnh -->
                            <div class="table-responsive text-nowrap">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>Hình ảnh</th>
                                            <th>Chọn làm ảnh đại diện</th>
                                            <th>Công cụ</th>
                                        </tr>
                                    </thead>
                                    <tbody id="imageTable" class="table-border-bottom-0">
                                        <!-- Ảnh sẽ được thêm bằng JavaScript -->
                                    </tbody>
                                </table>
                            </div>
                            <br />
                            <!-- Các input số -->
                            <div class="mb-3">
                                <label class="form-label">Số lượng</label>
                                @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control", type = "number", min = "0", required = "required", @data_parsley_required_message = "Không được để trống", @data_parsley_min = "0" })
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Giá bán ra</label>
                                <input id="demoPrice" class="form-control" type="text" placeholder="Giá bán ra" />
                                @Html.HiddenFor(x => x.Price)
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Giá nhập vào</label>
                                <input id="demoOriginalPrice" class="form-control" type="text" placeholder="Giá nhập vào" />
                                @Html.HiddenFor(x => x.OriginalPrice)
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Giá khuyến mãi</label>
                                <input id="demoPriceSale" class="form-control" type="text" placeholder="Giá khuyến mãi" />
                                @Html.HiddenFor(x => x.PriceSale)
                            </div>
                            <!-- Các input SEO -->
                            <div class="mb-3">
                                <label class="form-label">SeoTitle</label>
                                @Html.TextBoxFor(x => x.SeoTitle, new { @class = "form-control", placeholder = "SeoTitle", required = "required", @data_parsley_required_message = "Không được để trống" })
                            </div>
                            <div class="mb-3">
                                <label class="form-label">SeoKeywords</label>
                                @Html.TextBoxFor(x => x.SeoKeywords, new { @class = "form-control", placeholder = "SeoKeywords", required = "required", @data_parsley_required_message = "Không được để trống" })
                            </div>
                            <!-- Checkbox -->
                            <div class="form-check mt-3">
                                @Html.CheckBoxFor(x => x.IsActive, new { @class = "form-check-input", @checked = "checked" })
                                <label class="form-check-label">Hiển thị tất cả các trang</label>
                            </div>
                            <div class="form-check mt-3">
                                @Html.CheckBoxFor(x => x.IsHome, new { @class = "form-check-input" })
                                <label class="form-check-label">Hiển thị trang chủ</label>
                            </div>
                            <div class="form-check mt-3">
                                @Html.CheckBoxFor(x => x.IsSale, new { @class = "form-check-input" })
                                <label class="form-check-label">Hiển thị trang khuyến mại</label>
                            </div>
                            <div class="form-check mt-3">
                                @Html.CheckBoxFor(x => x.IsHot, new { @class = "form-check-input" })
                                <label class="form-check-label">Hiển thị trang nổi bật</label>
                            </div>
                        </div>

                        <!-- Nút submit -->
                        <div class="card-body">
                            <div class="demo-inline-spacing">
                                <a href="/admin/products" type="button" class="btn rounded-pill btn-outline-secondary">Trở lại</a>
                                <button type="submit" class="btn rounded-pill btn-outline-success">Thêm mới</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
<!-- / Content -->

    </div>
    <!-- Content wrapper -->
</div>

@section  scripts{
    <script>
        function BrowseServer() {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                addImageProduct(fileUrl);
            };
            finder.popup();
        }

        function addImageProduct(url) {
            var temp = $('#tCurrentId').val();
            var currentId = parseInt(temp) + 1;

            // Cập nhật lại tCurrentId
            $('#tCurrentId').val(currentId);

            var row = `
            <tr id="trow_${currentId}">
                <td class="text-center">${currentId}</td>
                <td class="text-center">
                    <img width="80" src="${url}" />
                    <input type='hidden' value="${url}" name="Images"/>
                </td>
                <td class="text-center">
                    <input type="radio" name="rDefault" value="${currentId}" ${currentId === 1 ? 'checked' : ''} />
                </td>
                <td class="text-center">
                    <a href="#" data-id="${currentId}" class="btn btn-sm btn-danger btnXoaAnh">Xóa</a>
                </td>
            </tr>
        `;

            $('#imageTable').append(row);
        }
        $(document).on('click', '.btnXoaAnh', function (e) {
            e.preventDefault();
            var id = $(this).data('id');

            Swal.fire({
                title: 'Xóa ảnh?',
                text: "Bạn có chắc chắn muốn xóa ảnh này không?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy',
            }).then((result) => {
                if (result.isConfirmed) {
                    $('#trow_' + id).remove();
                }
            });
        });

        $(document).ready(function () {
            // Khởi tạo AutoNumeric nếu có element
            if ($('#demoPrice').length) {
                new AutoNumeric('#demoPrice', { decimalPlaces: 0 });
            }
            if ($('#demoPriceSale').length) {
                new AutoNumeric('#demoPriceSale', { decimalPlaces: 0 });
            }
            if ($('#demoOriginalPrice').length) {
                new AutoNumeric('#demoOriginalPrice', { decimalPlaces: 0 });
            }

            $('#product-form').parsley();

            $('#product-form').on('submit', function (e) {
                if (!$(this).parsley().isValid()) {
                    e.preventDefault();
                    showAlert('Vui lòng nhập đầy đủ thông tin!', 'danger');
                    return;
                }

                // Lấy giá trị AutoNumeric
                if (AutoNumeric.getAutoNumericElement('#demoPrice')) {
                    $('#Price').val(AutoNumeric.getAutoNumericElement('#demoPrice').getNumber());
                }
                if (AutoNumeric.getAutoNumericElement('#demoPriceSale')) {
                    $('#PriceSale').val(AutoNumeric.getAutoNumericElement('#demoPriceSale').getNumber());
                }
                if (AutoNumeric.getAutoNumericElement('#demoOriginalPrice')) {
                    $('#OriginalPrice').val(AutoNumeric.getAutoNumericElement('#demoOriginalPrice').getNumber());
                }
            });

            // CKEditor
            CKEDITOR.replace('txtDetail', {
                customConfig: '/content/ckeditor/config.js',
                extraAllowedContent: 'span',
            });
        });
    </script>
}