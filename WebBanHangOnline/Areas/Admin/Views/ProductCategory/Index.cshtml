@model IEnumerable<WebBanHangOnline.Models.EF.ProductCategory>
@{
    ViewBag.Title = "Danh mục sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light"><a href="">Trang chủ</a> /</span> @ViewBag.Title</h4>

    <!-- Borderless Table -->
    <div class="card">
        @*@Html.AntiForgeryToken()*@
        <h5 class="card-header">@ViewBag.Title</h5>
        <div class="card-body d-flex justify-content-between align-items-center">
            <!-- Search -->
            @using (Html.BeginForm("Index", "ProductCategory", FormMethod.Get, new { @class = "d-flex align-items-center mb-3" }))
            {
                <div class="nav-item d-flex align-items-center">
                    <input type="text"
                           name="searchText"
                           id="searchText"
                           class="form-control border-0 shadow-none"
                           placeholder="Tìm theo tên "
                           value="@ViewBag.SearchText" />
                    <i class="bx bx-search fs-4 lh-0 me-2" type="submit"></i>
                </div>
            }
            <!-- /Search -->

            <div class="demo-inline-spacing">
                <a href="/admin/productcategory/add" class="btn rounded-pill btn-primary">Thêm mới</a>
                <button type="button" class="btn rounded-pill btn-danger BtnDeleteAll">Xoá tất cả</button>
            </div>
        </div>

        <div class="table-responsive text-nowrap">
            <table class="table table-borderless">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="SelectAll" /></th>
                        <th>#</th>
                        <th>Tên danh mục sản phẩm</th>
                        <th>Ngày tạo</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        var i = 1;
                        foreach (var item in Model)
                        {
                            <tr id="trow_@item.Id">
                                <td><input type="checkbox" class="cbkItem" value="@item.Id" /></td>
                                <td>@i</td>
                                <td>@item.Title</td>
                                <td>@item.CreatedDate.ToString("dd/MM/yyyy")</td>
                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu">
                                            <a class="dropdown-item" href="/admin/productcategory/edit/@item.Id"><i class="bx bx-edit-alt me-1"></i> Sửa</a>
                                            <a class="dropdown-item btnDelete" href="#" data-id="@item.Id"><i class="bx bx-trash me-1"></i> Xoá</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            i++;
                        }
                    }


                </tbody>
            </table>
        </div>
    </div>
    <!--/ Borderless Table -->

</div>
<!-- / Content -->

<div id="dialog">
    <iframe id="myIframe" style="border: 0; width: 100%; height: 100%;"></iframe>
</div>
@section scripts{
    <link href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script>
        $(function () {
            $("#searchText").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/admin/ProductCategory/GetSuggestions',
                        data: { term: request.term },
                        success: function (data) {
                            response(data);
                        }
                    });
                },
                minLength: 2,
            });
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!-- Thêm thư viện SweetAlert2 -->
    <script>
        $(document).ready(function () {
            // Lấy AntiForgeryToken từ form đầu tiên
            let token = $('input[name="__RequestVerificationToken"]').val();

            $.ajaxSetup({
                headers: {
                    'RequestVerificationToken': token
                }
            });

            $('body').on('change', '#SelectAll', function () {
                $('.cbkItem').prop('checked', this.checked);
            });

            $('body').on('click', '.BtnDeleteAll', function (e) {
                e.preventDefault();

                let selectedIds = [];
                $('.cbkItem:checked').each(function () {
                    selectedIds.push($(this).val());
                });

                if (selectedIds.length > 0) {
                    Swal.fire({
                        title: 'Bạn có chắc muốn xóa các bản ghi này?',
                        text: 'Thao tác này không thể hoàn tác!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Xóa',
                        cancelButtonText: 'Hủy'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/admin/ProductCategory/DeleteAll',
                                type: 'POST',
                                data: { ids: selectedIds.join(',') },
                                success: function (rs) {
                                    if (rs.success) {
                                        Swal.fire('Đã xóa!', 'Các bản ghi đã được xóa thành công.', 'success').then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire('Lỗi!', 'Không thể xóa các bản ghi này. Vui lòng thử lại.', 'error');
                                    }
                                },
                                error: function () {
                                    Swal.fire('Lỗi!', 'Đã xảy ra lỗi trong quá trình xóa. Vui lòng thử lại.', 'error');
                                }
                            });
                        }
                    });
                } else {
                    Swal.fire('Thông báo', 'Vui lòng chọn ít nhất một bản ghi để xóa.', 'info');
                }
            });

            $('body').on('click', '.btnDelete', function () {
                const id = $(this).data("id");

                Swal.fire({
                    title: 'Bạn có muốn xóa bản ghi này?',
                    text: 'Thao tác này không thể hoàn tác!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Xóa',
                    cancelButtonText: 'Hủy'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/admin/ProductCategory/Delete',
                            type: 'POST',
                            data: { id: id },
                            success: function (rs) {
                                if (rs.success) {
                                    Swal.fire(
                                        'Đã xóa!',
                                        'Bản ghi đã được xóa thành công.',
                                        'success'
                                    );
                                    $('#trow_' + id).fadeOut(300, function () {
                                        $(this).remove();
                                    });
                                } else {
                                    Swal.fire('Lỗi!', 'Không thể xóa bản ghi này. Vui lòng thử lại.', 'error');
                                }
                            },
                            error: function () {
                                Swal.fire('Lỗi!', 'Đã xảy ra lỗi trong quá trình xóa. Vui lòng thử lại.', 'error');
                            }
                        });
                    }
                });
            });
        });
    </script>
}
